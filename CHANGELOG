libsrs v0.2 beta

ANSI C (C89/99) implementation of the Sender Rewriting Scheme

v0.1  - initial release
      - (x86-32) 10,000 forwards 0m23.92s (1M MD5 forwards in 39.86 minutes or 410/second) *
v0.2  - (x86-32) 10,000 forwards 0m23.33s (1M SHA1 forwards in 38.88 minutes or 428/second) *
      - added support for 'plussed users'
      - removed util functions written to deal with unsigned types in favour of 
        using stdlib functions for speed reasons. 
      - cleaned up the code, created separate headers for each source
      - fixed bug in the time check function where it was encoding instead of
        decoding 
      - time is now encoded as base32
      - new directory tools, with separate makefile
      - srsquery renamed to srs and moved to tools directory
      - srs.c renamed main.c
      - new debug modes 1 through 7 and available from command line
v0.3  - (x86-32) 10k forwards in 41.60 seconds for 1M forwards or 86.5M fph (library) *
      - (x86-32) 10k forwards in 38.88 minutes for 1M forwards or around 1.54M fph (binary) *
      - now compiles under AMD X86-64
        - 10k forwards 35.5 seconds for 1M forwards or 101.4M fph (library) **
        - 10k forwards 30.24 minutes for 1M forwards, or just under 2M fph (binary) **
      - now compiles under FreeBSD 
        - removed ftime (deprecated) and switched to gettimeofday
        - fixed segv in fbsd in UTIL_strndup function by switching to strncpy from memcpy
          since it appears bsd was likely not NULL terminating strings taken from the
          command line or something along these lines.
        - adjusted headers appropriately to compile without warnings
      - now compiles under OpenBSD
        - when building the srs binary use gmake static-obsd and it will link the 
          libcrypto_p.a library which has the HMAC support.
      - fixed various small type casting errors mostly in tools/srs.c
      - fixed misleading comment language in tools/srs.c to reflect whats really 
        occuring.

*  The test machine for x86-32 results is always my dev machine AMD XP2600 running
   linux 2.4.22
** The test machine for x86-64 results is always an AMD XP3200+ running linux 2.6.3
